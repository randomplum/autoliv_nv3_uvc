/* Automatically generated by Amaranth 0.1.dev1271+g70d6f36. Do not edit. */
/* Debug Verilog generation was disabled. */
/* Generated by Yosys 0.30+1 (git sha1 5813809ad9a, gcc 13.1.1 -O2 -fexceptions -fstack-protector-strong -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -fPIC -Os) */

module cd_sync(clk25_0__i, clk);
  output clk;
  wire clk;
  input clk25_0__i;
  wire clk25_0__i;
  assign clk = clk25_0__i;
endmodule

module pin_clk25_0(clk25_0__io, clk25_0__i);
  output clk25_0__i;
  wire clk25_0__i;
  input clk25_0__io;
  wire clk25_0__io;
  IBUF clk25_0_0 (
    .I(clk25_0__io),
    .O(clk25_0__i)
  );
endmodule

module pin_fifo_0__addr(fifo_0__addr__io, fifo_0__addr__o);
  output [1:0] fifo_0__addr__io;
  wire [1:0] fifo_0__addr__io;
  input [1:0] fifo_0__addr__o;
  wire [1:0] fifo_0__addr__o;
  OBUF fifo_0__addr_0 (
    .I(fifo_0__addr__o[0]),
    .O(fifo_0__addr__io[0])
  );
  OBUF fifo_0__addr_1 (
    .I(fifo_0__addr__o[1]),
    .O(fifo_0__addr__io[1])
  );
endmodule

module pin_fifo_0__clk_out(fifo_0__clk_out__io, fifo_0__clk_out__o);
  output fifo_0__clk_out__io;
  wire fifo_0__clk_out__io;
  input fifo_0__clk_out__o;
  wire fifo_0__clk_out__o;
  OBUF fifo_0__clk_out_0 (
    .I(fifo_0__clk_out__o),
    .O(fifo_0__clk_out__io)
  );
endmodule

module pin_fifo_0__data(fifo_0__data__io, fifo_0__data__o);
  output [7:0] fifo_0__data__io;
  wire [7:0] fifo_0__data__io;
  input [7:0] fifo_0__data__o;
  wire [7:0] fifo_0__data__o;
  OBUF fifo_0__data_0 (
    .I(fifo_0__data__o[0]),
    .O(fifo_0__data__io[0])
  );
  OBUF fifo_0__data_1 (
    .I(fifo_0__data__o[1]),
    .O(fifo_0__data__io[1])
  );
  OBUF fifo_0__data_2 (
    .I(fifo_0__data__o[2]),
    .O(fifo_0__data__io[2])
  );
  OBUF fifo_0__data_3 (
    .I(fifo_0__data__o[3]),
    .O(fifo_0__data__io[3])
  );
  OBUF fifo_0__data_4 (
    .I(fifo_0__data__o[4]),
    .O(fifo_0__data__io[4])
  );
  OBUF fifo_0__data_5 (
    .I(fifo_0__data__o[5]),
    .O(fifo_0__data__io[5])
  );
  OBUF fifo_0__data_6 (
    .I(fifo_0__data__o[6]),
    .O(fifo_0__data__io[6])
  );
  OBUF fifo_0__data_7 (
    .I(fifo_0__data__o[7]),
    .O(fifo_0__data__io[7])
  );
endmodule

module pin_fifo_0__empty(fifo_0__empty__io);
  wire fifo_0__empty__i;
  input fifo_0__empty__io;
  wire fifo_0__empty__io;
  IBUF fifo_0__empty_0 (
    .I(fifo_0__empty__io),
    .O(fifo_0__empty__i)
  );
endmodule

module pin_fifo_0__full(fifo_0__full__io, fifo_0__full__i);
  output fifo_0__full__i;
  wire fifo_0__full__i;
  input fifo_0__full__io;
  wire fifo_0__full__io;
  IBUF fifo_0__full_0 (
    .I(fifo_0__full__io),
    .O(fifo_0__full__i)
  );
endmodule

module pin_fifo_0__pktend(fifo_0__pktend__io, fifo_0__pktend__o);
  output fifo_0__pktend__io;
  wire fifo_0__pktend__io;
  input fifo_0__pktend__o;
  wire fifo_0__pktend__o;
  OBUF fifo_0__pktend_0 (
    .I(fifo_0__pktend__o),
    .O(fifo_0__pktend__io)
  );
endmodule

module pin_fifo_0__sloe(fifo_0__sloe__io, fifo_0__sloe__o);
  output fifo_0__sloe__io;
  wire fifo_0__sloe__io;
  input fifo_0__sloe__o;
  wire fifo_0__sloe__o;
  OBUF fifo_0__sloe_0 (
    .I(fifo_0__sloe__o),
    .O(fifo_0__sloe__io)
  );
endmodule

module pin_fifo_0__slrd(fifo_0__slrd__io, fifo_0__slrd__o);
  output fifo_0__slrd__io;
  wire fifo_0__slrd__io;
  input fifo_0__slrd__o;
  wire fifo_0__slrd__o;
  OBUF fifo_0__slrd_0 (
    .I(fifo_0__slrd__o),
    .O(fifo_0__slrd__io)
  );
endmodule

module pin_fifo_0__slwr(fifo_0__slwr__io, fifo_0__slwr__o);
  output fifo_0__slwr__io;
  wire fifo_0__slwr__io;
  input fifo_0__slwr__o;
  wire fifo_0__slwr__o;
  OBUF fifo_0__slwr_0 (
    .I(fifo_0__slwr__o),
    .O(fifo_0__slwr__io)
  );
endmodule

module pin_led_0(led_0__io, led_0__o);
  output led_0__io;
  wire led_0__io;
  input led_0__o;
  wire led_0__o;
  OBUF led_0_0 (
    .I(led_0__o),
    .O(led_0__io)
  );
endmodule

module pin_led_1(led_1__io, led_1__o);
  output led_1__io;
  wire led_1__io;
  input led_1__o;
  wire led_1__o;
  OBUF led_1_0 (
    .I(led_1__o),
    .O(led_1__io)
  );
endmodule

module pin_led_2(led_2__io, led_2__o);
  output led_2__io;
  wire led_2__io;
  input led_2__o;
  wire led_2__o;
  OBUF led_2_0 (
    .I(led_2__o),
    .O(led_2__io)
  );
endmodule

module pin_led_3(led_3__io, led_3__o);
  output led_3__io;
  wire led_3__io;
  input led_3__o;
  wire led_3__o;
  OBUF led_3_0 (
    .I(led_3__o),
    .O(led_3__io)
  );
endmodule

module pin_led_4(led_4__io, led_4__o);
  output led_4__io;
  wire led_4__io;
  input led_4__o;
  wire led_4__o;
  OBUF led_4_0 (
    .I(led_4__o),
    .O(led_4__io)
  );
endmodule

module pin_led_5(led_5__io, led_5__o);
  output led_5__io;
  wire led_5__io;
  input led_5__o;
  wire led_5__o;
  OBUF led_5_0 (
    .I(led_5__o),
    .O(led_5__io)
  );
endmodule

module pin_led_6(led_6__io, led_6__o);
  output led_6__io;
  wire led_6__io;
  input led_6__o;
  wire led_6__o;
  OBUF led_6_0 (
    .I(led_6__o),
    .O(led_6__io)
  );
endmodule

module pin_led_7(led_7__io, led_7__o);
  output led_7__io;
  wire led_7__io;
  input led_7__o;
  wire led_7__o;
  OBUF led_7_0 (
    .I(led_7__o),
    .O(led_7__io)
  );
endmodule

module top(led_1__io, led_2__io, led_3__io, led_4__io, led_5__io, led_6__io, led_7__io, fifo_0__data__io, fifo_0__addr__io, fifo_0__clk_out__io, fifo_0__sloe__io, fifo_0__slrd__io, fifo_0__slwr__io, fifo_0__pktend__io, fifo_0__full__io, fifo_0__empty__io, clk25_0__io, led_0__io);
  reg \$auto$verilog_backend.cc:2097:dump_module$1  = 0;
  wire \$1 ;
  wire \$100 ;
  wire [3:0] \$102 ;
  wire [3:0] \$103 ;
  wire \$105 ;
  wire [3:0] \$107 ;
  wire [3:0] \$108 ;
  wire [11:0] \$11 ;
  wire \$110 ;
  wire [2:0] \$112 ;
  wire [2:0] \$114 ;
  wire \$115 ;
  wire \$118 ;
  wire [17:0] \$120 ;
  wire [17:0] \$121 ;
  wire \$123 ;
  wire \$125 ;
  wire [10:0] \$127 ;
  wire [10:0] \$128 ;
  wire [11:0] \$13 ;
  wire \$130 ;
  wire \$132 ;
  wire \$134 ;
  wire \$14 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire [2:0] \$25 ;
  wire [2:0] \$27 ;
  wire \$28 ;
  wire \$3 ;
  wire \$31 ;
  wire [2:0] \$33 ;
  wire [2:0] \$35 ;
  wire \$36 ;
  wire \$39 ;
  wire [2:0] \$41 ;
  wire [2:0] \$43 ;
  wire \$44 ;
  wire \$47 ;
  wire [2:0] \$49 ;
  wire \$5 ;
  wire [2:0] \$51 ;
  wire \$52 ;
  wire \$55 ;
  wire [11:0] \$57 ;
  wire \$59 ;
  wire [2:0] \$61 ;
  wire [2:0] \$63 ;
  wire \$64 ;
  wire \$67 ;
  wire [17:0] \$69 ;
  wire [17:0] \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$87 ;
  wire \$89 ;
  wire [11:0] \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire [3:0] \$97 ;
  wire [3:0] \$98 ;
  reg [9:0] byte_cnt = 10'h000;
  reg [9:0] \byte_cnt$next ;
  wire cd_sync_clk25_0__i;
  wire clk;
  input clk25_0__io;
  wire clk25_0__io;
  reg [2:0] cnt = 3'h0;
  reg [2:0] \cnt$next ;
  reg eof = 1'h0;
  reg \eof$next ;
  reg fid = 1'h0;
  reg \fid$next ;
  output [1:0] fifo_0__addr__io;
  wire [1:0] fifo_0__addr__io;
  output fifo_0__clk_out__io;
  wire fifo_0__clk_out__io;
  output [7:0] fifo_0__data__io;
  wire [7:0] fifo_0__data__io;
  input fifo_0__empty__io;
  wire fifo_0__empty__io;
  input fifo_0__full__io;
  wire fifo_0__full__io;
  output fifo_0__pktend__io;
  wire fifo_0__pktend__io;
  output fifo_0__sloe__io;
  wire fifo_0__sloe__io;
  output fifo_0__slrd__io;
  wire fifo_0__slrd__io;
  output fifo_0__slwr__io;
  wire fifo_0__slwr__io;
  reg [2:0] fsm_state = 3'h0;
  reg [2:0] \fsm_state$next ;
  output led_0__io;
  wire led_0__io;
  output led_1__io;
  wire led_1__io;
  output led_2__io;
  wire led_2__io;
  output led_3__io;
  wire led_3__io;
  output led_4__io;
  wire led_4__io;
  output led_5__io;
  wire led_5__io;
  output led_6__io;
  wire led_6__io;
  output led_7__io;
  wire led_7__io;
  wire [1:0] pin_fifo_0__addr_fifo_0__addr__o;
  reg pin_fifo_0__clk_out_fifo_0__clk_out__o = 1'h0;
  wire \pin_fifo_0__clk_out_fifo_0__clk_out__o$next ;
  reg [7:0] pin_fifo_0__data_fifo_0__data__o = 8'h00;
  reg [7:0] \pin_fifo_0__data_fifo_0__data__o$next ;
  wire pin_fifo_0__full_fifo_0__full__i;
  reg pin_fifo_0__pktend_fifo_0__pktend__o = 1'h0;
  reg \pin_fifo_0__pktend_fifo_0__pktend__o$next ;
  wire pin_fifo_0__sloe_fifo_0__sloe__o;
  wire pin_fifo_0__slrd_fifo_0__slrd__o;
  reg pin_fifo_0__slwr_fifo_0__slwr__o = 1'h0;
  reg \pin_fifo_0__slwr_fifo_0__slwr__o$next ;
  reg pin_led_0_led_0__o = 1'h0;
  reg \pin_led_0_led_0__o$next ;
  reg pin_led_1_led_1__o = 1'h0;
  reg \pin_led_1_led_1__o$next ;
  reg pin_led_2_led_2__o = 1'h0;
  reg \pin_led_2_led_2__o$next ;
  reg pin_led_3_led_3__o = 1'h0;
  reg \pin_led_3_led_3__o$next ;
  reg pin_led_4_led_4__o = 1'h0;
  reg \pin_led_4_led_4__o$next ;
  reg pin_led_5_led_5__o = 1'h0;
  reg \pin_led_5_led_5__o$next ;
  reg pin_led_6_led_6__o = 1'h0;
  reg \pin_led_6_led_6__o$next ;
  reg pin_led_7_led_7__o = 1'h0;
  reg \pin_led_7_led_7__o$next ;
  reg [16:0] pixel_cnt = 17'h00000;
  reg [16:0] \pixel_cnt$next ;
  assign \$100  = cnt == 1'h1;
  assign \$103  = cnt + 1'h1;
  assign \$105  = cnt == 1'h1;
  assign \$108  = cnt + 1'h1;
  assign \$110  = cnt == 1'h1;
  assign \$112  = byte_cnt % 3'h4;
  assign \$118  = \$114  == 1'h1;
  assign \$121  = pixel_cnt + 1'h1;
  assign \$123  = pixel_cnt == 17'h10000;
  assign \$125  = cnt == 1'h1;
  assign \$128  = byte_cnt + 1'h1;
  assign \$130  = ~ pin_fifo_0__pktend_fifo_0__pktend__o;
  assign \$132  = byte_cnt >= 1'h1;
  assign \$134  = byte_cnt < 1'h1;
  always @(posedge clk)
    pin_fifo_0__clk_out_fifo_0__clk_out__o <= \pin_fifo_0__clk_out_fifo_0__clk_out__o$next ;
  always @(posedge clk)
    fid <= \fid$next ;
  always @(posedge clk)
    eof <= \eof$next ;
  always @(posedge clk)
    pin_fifo_0__data_fifo_0__data__o <= \pin_fifo_0__data_fifo_0__data__o$next ;
  always @(posedge clk)
    pin_fifo_0__slwr_fifo_0__slwr__o <= \pin_fifo_0__slwr_fifo_0__slwr__o$next ;
  always @(posedge clk)
    pin_fifo_0__pktend_fifo_0__pktend__o <= \pin_fifo_0__pktend_fifo_0__pktend__o$next ;
  always @(posedge clk)
    pin_led_0_led_0__o <= \pin_led_0_led_0__o$next ;
  always @(posedge clk)
    pin_led_1_led_1__o <= \pin_led_1_led_1__o$next ;
  always @(posedge clk)
    pin_led_2_led_2__o <= \pin_led_2_led_2__o$next ;
  always @(posedge clk)
    pin_led_3_led_3__o <= \pin_led_3_led_3__o$next ;
  always @(posedge clk)
    pin_led_4_led_4__o <= \pin_led_4_led_4__o$next ;
  always @(posedge clk)
    pin_led_5_led_5__o <= \pin_led_5_led_5__o$next ;
  always @(posedge clk)
    pin_led_6_led_6__o <= \pin_led_6_led_6__o$next ;
  always @(posedge clk)
    pin_led_7_led_7__o <= \pin_led_7_led_7__o$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  always @(posedge clk)
    cnt <= \cnt$next ;
  always @(posedge clk)
    pixel_cnt <= \pixel_cnt$next ;
  always @(posedge clk)
    byte_cnt <= \byte_cnt$next ;
  assign \$17  = $signed(\$7 ) < $signed(12'h1fe);
  assign \$1  = ~ pin_fifo_0__clk_out_fifo_0__clk_out__o;
  assign \$19  = pixel_cnt == 17'h10000;
  assign \$21  = ! byte_cnt;
  assign \$23  = byte_cnt == 1'h1;
  assign \$25  = byte_cnt % 3'h4;
  assign \$31  = \$27  == 2'h2;
  assign \$33  = byte_cnt % 3'h4;
  assign \$3  = pixel_cnt == 17'h10000;
  assign \$39  = \$35  == 2'h3;
  assign \$41  = byte_cnt % 3'h4;
  assign \$47  = ! \$43 ;
  assign \$49  = byte_cnt % 3'h4;
  assign \$55  = \$51  == 1'h1;
  assign \$57  = 11'h400 - byte_cnt;
  assign \$5  = ~ fid;
  assign \$59  = $signed(\$57 ) == $signed(12'h003);
  assign \$61  = byte_cnt % 3'h4;
  assign \$67  = \$63  == 1'h1;
  assign \$69  = 17'h10000 - pixel_cnt;
  assign \$71  = $signed(\$69 ) == $signed(18'h00002);
  assign \$73  = cnt == 1'h1;
  assign \$75  = ~ pin_fifo_0__pktend_fifo_0__pktend__o;
  assign \$77  = byte_cnt >= 1'h1;
  assign \$7  = 17'h10000 - pixel_cnt;
  assign \$79  = byte_cnt < 1'h1;
  assign \$81  = pixel_cnt == 17'h10000;
  assign \$83  = cnt == 1'h1;
  assign \$85  = cnt == 1'h1;
  assign \$87  = cnt == 1'h1;
  assign \$89  = ~ pin_fifo_0__pktend_fifo_0__pktend__o;
  assign \$91  = byte_cnt >= 1'h1;
  assign \$93  = byte_cnt < 1'h1;
  assign \$98  = cnt + 1'h1;
  cd_sync cd_sync (
    .clk(clk),
    .clk25_0__i(cd_sync_clk25_0__i)
  );
  pin_clk25_0 pin_clk25_0 (
    .clk25_0__i(cd_sync_clk25_0__i),
    .clk25_0__io(clk25_0__io)
  );
  pin_fifo_0__addr pin_fifo_0__addr (
    .fifo_0__addr__io(fifo_0__addr__io),
    .fifo_0__addr__o(2'h0)
  );
  pin_fifo_0__clk_out pin_fifo_0__clk_out (
    .fifo_0__clk_out__io(fifo_0__clk_out__io),
    .fifo_0__clk_out__o(pin_fifo_0__clk_out_fifo_0__clk_out__o)
  );
  pin_fifo_0__data pin_fifo_0__data (
    .fifo_0__data__io(fifo_0__data__io),
    .fifo_0__data__o(pin_fifo_0__data_fifo_0__data__o)
  );
  pin_fifo_0__empty pin_fifo_0__empty (
    .fifo_0__empty__io(fifo_0__empty__io)
  );
  pin_fifo_0__full pin_fifo_0__full (
    .fifo_0__full__i(pin_fifo_0__full_fifo_0__full__i),
    .fifo_0__full__io(fifo_0__full__io)
  );
  pin_fifo_0__pktend pin_fifo_0__pktend (
    .fifo_0__pktend__io(fifo_0__pktend__io),
    .fifo_0__pktend__o(pin_fifo_0__pktend_fifo_0__pktend__o)
  );
  pin_fifo_0__sloe pin_fifo_0__sloe (
    .fifo_0__sloe__io(fifo_0__sloe__io),
    .fifo_0__sloe__o(1'h1)
  );
  pin_fifo_0__slrd pin_fifo_0__slrd (
    .fifo_0__slrd__io(fifo_0__slrd__io),
    .fifo_0__slrd__o(1'h1)
  );
  pin_fifo_0__slwr pin_fifo_0__slwr (
    .fifo_0__slwr__io(fifo_0__slwr__io),
    .fifo_0__slwr__o(pin_fifo_0__slwr_fifo_0__slwr__o)
  );
  pin_led_0 pin_led_0 (
    .led_0__io(led_0__io),
    .led_0__o(pin_led_0_led_0__o)
  );
  pin_led_1 pin_led_1 (
    .led_1__io(led_1__io),
    .led_1__o(pin_led_1_led_1__o)
  );
  pin_led_2 pin_led_2 (
    .led_2__io(led_2__io),
    .led_2__o(pin_led_2_led_2__o)
  );
  pin_led_3 pin_led_3 (
    .led_3__io(led_3__io),
    .led_3__o(pin_led_3_led_3__o)
  );
  pin_led_4 pin_led_4 (
    .led_4__io(led_4__io),
    .led_4__o(pin_led_4_led_4__o)
  );
  pin_led_5 pin_led_5 (
    .led_5__io(led_5__io),
    .led_5__o(pin_led_5_led_5__o)
  );
  pin_led_6 pin_led_6 (
    .led_6__io(led_6__io),
    .led_6__o(pin_led_6_led_6__o)
  );
  pin_led_7 pin_led_7 (
    .led_7__io(led_7__io),
    .led_7__o(pin_led_7_led_7__o)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \fsm_state$next  = fsm_state;
    casez (fsm_state)
      3'h0:
          \fsm_state$next  = 3'h1;
      3'h1:
          casez (\$83 )
            1'h1:
                \fsm_state$next  = 3'h2;
          endcase
      3'h3:
          casez (\$85 )
            1'h1:
                \fsm_state$next  = 3'h2;
          endcase
      3'h2:
          casez (\$87 )
            1'h1:
                casez ({ \$93 , \$91 , \$89  })
                  3'b??1:
                      \fsm_state$next  = 3'h4;
                  3'b?1?:
                      \fsm_state$next  = 3'h3;
                  3'b1??:
                      \fsm_state$next  = 3'h1;
                endcase
          endcase
      3'h4:
          casez (\$95 )
            1'h1:
                \fsm_state$next  = 3'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \cnt$next  = cnt;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
        begin
          \cnt$next  = \$98 [2:0];
          casez (\$100 )
            1'h1:
                \cnt$next  = 3'h0;
          endcase
        end
      3'h3:
        begin
          \cnt$next  = \$103 [2:0];
          casez (\$105 )
            1'h1:
                \cnt$next  = 3'h0;
          endcase
        end
      3'h2:
        begin
          \cnt$next  = \$108 [2:0];
          casez (\$110 )
            1'h1:
                \cnt$next  = 3'h0;
          endcase
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \pixel_cnt$next  = pixel_cnt;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h3:
          casez (\$118 )
            1'h1:
                \pixel_cnt$next  = \$121 [16:0];
          endcase
      3'h2:
          /* empty */;
      3'h4:
          casez (\$123 )
            1'h1:
                \pixel_cnt$next  = 17'h00000;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \byte_cnt$next  = byte_cnt;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h3:
          /* empty */;
      3'h2:
          casez (\$125 )
            1'h1:
              begin
                \byte_cnt$next  = \$128 [9:0];
                casez ({ \$134 , \$132 , \$130  })
                  3'b??1:
                      \byte_cnt$next  = 10'h000;
                endcase
              end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \fid$next  = fid;
    casez (fsm_state)
      3'h0:
          \fid$next  = 1'h0;
      3'h1:
          /* empty */;
      3'h3:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          casez (\$3 )
            1'h1:
                \fid$next  = \$5 ;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \eof$next  = eof;
    casez (fsm_state)
      3'h0:
          \eof$next  = 1'h0;
      3'h1:
          /* empty */;
      3'h3:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
        begin
          (* full_case = 32'd1 *)
          casez (\$17 )
            1'h1:
                \eof$next  = 1'h1;
            default:
                \eof$next  = 1'h0;
          endcase
          casez (\$19 )
            1'h1:
                \eof$next  = 1'h0;
          endcase
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \pin_fifo_0__data_fifo_0__data__o$next  = pin_fifo_0__data_fifo_0__data__o;
    casez (fsm_state)
      3'h0:
          \pin_fifo_0__data_fifo_0__data__o$next  = 8'h00;
      3'h1:
        begin
          casez (\$21 )
            1'h1:
                \pin_fifo_0__data_fifo_0__data__o$next  = 8'h02;
          endcase
          casez (\$23 )
            1'h1:
                \pin_fifo_0__data_fifo_0__data__o$next  = { 6'h20, eof, fid };
          endcase
        end
      3'h3:
        begin
          casez (\$31 )
            1'h1:
                \pin_fifo_0__data_fifo_0__data__o$next  = 8'h00;
          endcase
          casez (\$39 )
            1'h1:
                \pin_fifo_0__data_fifo_0__data__o$next  = 8'h3f;
          endcase
          casez (\$47 )
            1'h1:
                \pin_fifo_0__data_fifo_0__data__o$next  = 8'hff;
          endcase
          casez (\$55 )
            1'h1:
                \pin_fifo_0__data_fifo_0__data__o$next  = 8'h3f;
          endcase
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \pin_fifo_0__slwr_fifo_0__slwr__o$next  = pin_fifo_0__slwr_fifo_0__slwr__o;
    casez (fsm_state)
      3'h0:
          \pin_fifo_0__slwr_fifo_0__slwr__o$next  = 1'h1;
      3'h1:
          \pin_fifo_0__slwr_fifo_0__slwr__o$next  = 1'h0;
      3'h3:
          \pin_fifo_0__slwr_fifo_0__slwr__o$next  = 1'h0;
      3'h2:
          \pin_fifo_0__slwr_fifo_0__slwr__o$next  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \pin_fifo_0__pktend_fifo_0__pktend__o$next  = pin_fifo_0__pktend_fifo_0__pktend__o;
    casez (fsm_state)
      3'h0:
          \pin_fifo_0__pktend_fifo_0__pktend__o$next  = 1'h1;
      3'h1:
          /* empty */;
      3'h3:
        begin
          casez (\$59 )
            1'h1:
                \pin_fifo_0__pktend_fifo_0__pktend__o$next  = 1'h0;
          endcase
          casez (\$67 )
            1'h1:
                casez (\$71 )
                  1'h1:
                      \pin_fifo_0__pktend_fifo_0__pktend__o$next  = 1'h0;
                endcase
          endcase
        end
      3'h2:
          casez (\$73 )
            1'h1:
                casez ({ \$79 , \$77 , \$75  })
                  3'b??1:
                      \pin_fifo_0__pktend_fifo_0__pktend__o$next  = 1'h1;
                  3'b?1?:
                      \pin_fifo_0__pktend_fifo_0__pktend__o$next  = 1'h1;
                  3'b1??:
                      \pin_fifo_0__pktend_fifo_0__pktend__o$next  = 1'h1;
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2097:dump_module$1 ) begin end
    \pin_led_0_led_0__o$next  = pin_led_0_led_0__o;
    \pin_led_1_led_1__o$next  = pin_led_1_led_1__o;
    \pin_led_2_led_2__o$next  = pin_led_2_led_2__o;
    \pin_led_3_led_3__o$next  = pin_led_3_led_3__o;
    \pin_led_4_led_4__o$next  = pin_led_4_led_4__o;
    \pin_led_5_led_5__o$next  = pin_led_5_led_5__o;
    \pin_led_6_led_6__o$next  = pin_led_6_led_6__o;
    \pin_led_7_led_7__o$next  = pin_led_7_led_7__o;
    casez (fsm_state)
      3'h0:
          { \pin_led_7_led_7__o$next , \pin_led_6_led_6__o$next , \pin_led_5_led_5__o$next , \pin_led_4_led_4__o$next , \pin_led_3_led_3__o$next , \pin_led_2_led_2__o$next , \pin_led_1_led_1__o$next , \pin_led_0_led_0__o$next  } = 8'h01;
      3'h1:
          { \pin_led_7_led_7__o$next , \pin_led_6_led_6__o$next , \pin_led_5_led_5__o$next , \pin_led_4_led_4__o$next , \pin_led_3_led_3__o$next , \pin_led_2_led_2__o$next , \pin_led_1_led_1__o$next , \pin_led_0_led_0__o$next  } = 8'h02;
      3'h3:
          { \pin_led_7_led_7__o$next , \pin_led_6_led_6__o$next , \pin_led_5_led_5__o$next , \pin_led_4_led_4__o$next , \pin_led_3_led_3__o$next , \pin_led_2_led_2__o$next , \pin_led_1_led_1__o$next , \pin_led_0_led_0__o$next  } = 8'h04;
      3'h2:
          { \pin_led_7_led_7__o$next , \pin_led_6_led_6__o$next , \pin_led_5_led_5__o$next , \pin_led_4_led_4__o$next , \pin_led_3_led_3__o$next , \pin_led_2_led_2__o$next , \pin_led_1_led_1__o$next , \pin_led_0_led_0__o$next  } = 8'h80;
      3'h4:
        begin
          { \pin_led_7_led_7__o$next , \pin_led_6_led_6__o$next , \pin_led_5_led_5__o$next , \pin_led_4_led_4__o$next , \pin_led_3_led_3__o$next , \pin_led_2_led_2__o$next , \pin_led_1_led_1__o$next , \pin_led_0_led_0__o$next  } = 8'h10;
          casez (\$81 )
            1'h1:
                { \pin_led_7_led_7__o$next , \pin_led_6_led_6__o$next , \pin_led_5_led_5__o$next , \pin_led_4_led_4__o$next , \pin_led_3_led_3__o$next , \pin_led_2_led_2__o$next , \pin_led_1_led_1__o$next , \pin_led_0_led_0__o$next  } = 8'h20;
          endcase
        end
    endcase
  end
  assign \$97  = \$98 ;
  assign \$102  = \$103 ;
  assign \$107  = \$108 ;
  assign \$120  = \$121 ;
  assign \$127  = \$128 ;
  assign pin_fifo_0__slrd_fifo_0__slrd__o = 1'h1;
  assign pin_fifo_0__sloe_fifo_0__sloe__o = 1'h1;
  assign pin_fifo_0__addr_fifo_0__addr__o = 2'h0;
  assign \pin_fifo_0__clk_out_fifo_0__clk_out__o$next  = \$1 ;
  assign \$9  = 12'h3fc;
  assign \$11  = 12'h1fe;
  assign \$14  = 1'h0;
  assign \$13  = 12'h1fe;
  assign \$28  = 1'h0;
  assign \$27  = \$25 ;
  assign \$36  = 1'h0;
  assign \$35  = \$33 ;
  assign \$44  = 1'h0;
  assign \$43  = \$41 ;
  assign \$52  = 1'h0;
  assign \$51  = \$49 ;
  assign \$64  = 1'h0;
  assign \$63  = \$61 ;
  assign \$95  = pin_fifo_0__full_fifo_0__full__i;
  assign \$115  = 1'h0;
  assign \$114  = \$112 ;
endmodule
